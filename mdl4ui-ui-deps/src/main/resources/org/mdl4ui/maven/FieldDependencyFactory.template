package ${package.name};

${static.imports}
import javax.annotation.Generated;

import org.mdl4ui.base.model.*;
import org.mdl4ui.fields.model.FieldDependencyFactory;

@Generated(value = "${process.class}",  date = "${process.date}")
public final class ${target.class.name} implements FieldDependencyFactory {
	enum ${target.dep.enum.name} implements FieldDependency {
		${dep.enum.constants}
		NO(null);
	
	    private final FieldID from;
	    private final DependencyPath[] to;
	
	    ${target.dep.enum.name}(FieldID from) {
	        this(from, new DependencyPath[] {});
	    }
	
	    ${target.dep.enum.name}(FieldID from, DependencyPath... to) {
	        this.from = from;
	        this.to = to;
	    }
	
	    @Override
	    public FieldID from() {
	        return from;
	    }
	
	    @Override
	    public FieldID[] to() {
	        final FieldID[] deps = new FieldID[to.length];
	        for (int i = 0; i < deps.length; i++)
	            deps[i] = to[i].getFieldId();
	        return deps;
	    }
	}
	
	@Override
	public FieldID[] get(FieldID fieldId) {
        for (${target.dep.enum.name} dep : ${target.dep.enum.name}.values())
            if (dep.from() == fieldId)
                return dep.to();
        return ${target.dep.enum.name}.NO.to();
    }
}