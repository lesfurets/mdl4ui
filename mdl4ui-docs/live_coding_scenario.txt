default with GWT compilation :  mvn clean install
disable GWT compilation: mvn clean install -P\!gwt
with integration: mvn clean install -Pgwt,it

Step 1: add a scenario in the UI model
--------------------------------------

Goal: Create a new scenario for our application: registration using a phone.

org.mdl4ui.ui.sample.EScenarioSample
	SCENARIO_PHONE(EScreenSample.SCR_REGISTRATION_BY_PHONE, EScreenSample.SCR_DONE)
	
org.mdl4ui.ui.sample.EScreenSample
    SCR_REGISTRATION_BY_PHONE(EBlockSample.PERSONAL_INFORMATIONS, //
					EBlockSample.PHONE_SETTINGS, //
					EBlockSample.ACCOUNT), //

org.mdl4ui.ui.sample.EBlockSample
	PHONE_SETTINGS(EFieldSample.LANGUAGE, //
                    EFieldSample.PHONE_NUMBER, //
                    EFieldSample.TIMEZONE), //

org.mdl4ui.ui.sample.EFieldSample
	PHONE_NUMBER(FieldType.TEXTBOX), //

Step 1: add i18n resources
--------------------------

org.mdl4ui.fields.sample.i18n.BlockMessages
    @InjectSampleLabel(@OnElement(blocks = EBlockSample.PHONE_SETTINGS))
    @Message("My Settings and Phone Number")
    String phoneSettings();

org.mdl4ui.fields.sample.i18n.FieldMessages
	// add injection only
    @InjectSampleLabel(@OnElement(fields = EFieldSample.PHONE_NUMBER))
    @Message("Phone Number")
    String phoneNumber();

    @InjectSamplePlaceholder(@OnElement(fields = EFieldSample.PHONE_NUMBER))
    @Message("01 02 03 04 06")
    String phonePlaceholder();
	
org.mdl4ui.fields.sample.i18n.ValidationMessages
    @Message("Please specify a phone number")
    String please_specify_a_phone_number();
	
    @Message("Please specify a valid number")
    String please_specify_a_valid_phone_number();
	
Step 2: add field editor
------------------------

package org.mdl4ui.fields.sample.editor;

import org.mdl4ui.base.model.FieldID;
import org.mdl4ui.fields.model.Field;
import org.mdl4ui.fields.model.component.TextBoxField;
import org.mdl4ui.fields.model.event.FieldEvent;
import org.mdl4ui.fields.model.validation.FieldValidation;
import org.mdl4ui.fields.sample.InjectSampleEditor;
import org.mdl4ui.fields.sample.OnField;
import org.mdl4ui.fields.sample.context.SampleContext;
import org.mdl4ui.fields.sample.i18n.ValidationMessages;
import org.mdl4ui.ui.sample.EFieldSample;

@InjectSampleEditor(@OnField(EFieldSample.PHONE_NUMBER))
public class PhoneEditor extends SampleEditor {

    private static final String PHONE_PATTERN = "^(01|02|03|04|05|06|07|08|09)[0-9]{8}";

    private ValidationMessages messages;

    public PhoneEditor(ValidationMessages messages) {
        this.messages = messages;
    }

    @Override
    public String value(FieldID field, SampleContext context, FieldEvent fieldEvent) {
        return context.getUserAccount().getPhoneNumber();
    }

    @Override
    public void updateFromContext(Field field, SampleContext context, FieldEvent fieldEvent) {
        TextBoxField textbox = field.getComponent();
        textbox.setValue(context.getUserAccount().getPhoneNumber());
    }

    @Override
    public void updateContext(Field field, SampleContext context, FieldEvent fieldEvent) {
        TextBoxField textbox = field.getComponent();
        context.getUserAccount().setPhoneNumber(textbox.getValue());
    }

    @Override
    public FieldValidation validate(Field field, SampleContext context, FieldEvent fieldEvent) {
        TextBoxField textbox = field.getComponent();
        if (textbox.isEmpty()) {
            return error(field, messages.please_specify_a_phone_number());
        } else if (!textbox.getValue().replace(" ", "").matches(PHONE_PATTERN)) {
            return error(field, messages.please_specify_a_valid_phone_number());
        }
        return valid(field);
    }
}

OPTIONAL: add unit test?

Step 3: launch app
------------------
Launch web application, switch between scenarios.
http://127.0.0.1:8888/mdl4ui.html?gwt.codesvr=127.0.0.1:9997#SCENARIO_PHONE
Browser refresh is needed.

Step 4: implements selenium
---------------------------
Add a selenium test. 
Launch integrations test.


